In this scenario you will how to deploy existing Docker Compose files to Kubernetes using Kompose.

Kompose is a tool to help users familiar with docker-compose move to Kubernetes. It takes a Docker Compose file and translates it into Kubernetes resources. More details can be found at http://kompose.io/

Step 1 - Install
Kompose is deployed as a binary onto a client. To install Kompose on Katacoda, run the command curl -L https://github.com/kubernetes/kompose/releases/download/v1.9.0/kompose-linux-amd64 -o /usr/bin/kompose && chmod +x /usr/bin/kompose

Details on how to install Kompose for your OS can be found at https://github.com/kubernetes/kompose/releases

Step 2 - Up
Kompose takes existing Docker Compose files and enables them to be deployed onto Kubernetes. Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your applicationâ€™s services.

Task
Copy an example Docker Compose file to the editor.

Copy to Editorversion: "2"
services:
  redis-master:
    image: redis:latest
    ports:
      - "6379"
  redis-slave:
    image: gcr.io/google_samples/gb-redisslave:v1
    ports:
      - "6379"
    environment:
      - GET_HOSTS_FROM=dns
  frontend:
    image: gcr.io/google-samples/gb-frontend:v3
    ports:
      - "80:80"
    environment:
      - GET_HOSTS_FROM=dns
As with Docker Compose, Kompose allows the Images to be deployed using a single command of kompose up

The details of what has been deployed can be discovered with the Kubernetes CLI kubectl.

kubectl get deployment,svc,pods,pvc

Step 3 - Convert
Kompose also has the ability to take existing Compose files and generate the related Kubernetes Manifest files.

The command kompose convert will generate the files, viewable via ls.


Step 4 - Kubectl create
With the files converted, they too can be deployed using Kubectl. This will match the existing deployment applied via kompose up.

kubectl apply -f frontend-service.yaml,redis-master-service.yaml,redis-slave-service.yaml,frontend-deployment.yaml,redis-master-deployment.yaml,redis-slave-deployment.yaml

Step 5 - OpenShift
Kompose also supports different Kubernetes distributions, for example OpenShift.

kompose --provider openshift convert

Step 6 - Convert To Json
By default, Kompose generates YAML files. It's possible to generate JSON based files by specifying the -j parameter.

kompose convert